{"version":3,"sources":["Components/SizeComponent.js","Components/MatrixComponent.js","helpers/math.js","Components/MainComponent.js","App.js","serviceWorker.js","index.js"],"names":["SizeComponent","props","state","width","height","handleInput","bind","target","name","value","this","setState","handleSizeChange","Row","className","Col","xs","size","md","Form","FormGroup","row","Input","type","placeholder","onChange","min","Component","MatrixComponent","x","y","oldValues","values","newValues","i","push","j","Number","handleMatrixChange","saddle","readonly","prevProps","prevState","snapshot","handleResize","calcBg","columns","key","slice","length","map","v","maxs","rows","val","Math","readOnly","Table","bordered","responsive","renderTable","MainComponent","matrix","graphSol","max","a","async","myMatrix","arr","fetch","method","headers","Accept","body","JSON","stringify","res","json","resJson","console","log","solveSimplex","then","solution","resStr","point","substr","decision","Container","fluid","offset","renderSolution","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6e7129a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Row, Col, Form, FormGroup, Input } from \"reactstrap\";\n\nclass SizeComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 2,\n      height: 2,\n    };\n\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleInput({ target }) {\n    let { name, value } = target;\n    if (value <= 0) {\n      value = \"\";\n    }\n    this.setState({ [name]: value });\n    this.props.handleSizeChange({ ...this.state, [name]: value });\n  }\n\n  render() {\n    return (\n      <Row className=\"text-left\">\n        <Col xs={{ size: 12 }} md={{ size: \"auto\" }}>\n          <h2>Введите колличетво уравнений и переменных:</h2>\n        </Col>\n        <Col xs={11} md={3} className=\"mt-1\">\n          <Form>\n            <FormGroup row>\n              <Col>\n                <Input\n                  type=\"number\"\n                  placeholder={1}\n                  name=\"height\"\n                  value={this.state.height}\n                  onChange={this.handleInput}\n                  min={1}\n                />\n              </Col>\n              <span className=\"cross\">X</span>\n              <Col>\n                <Input\n                  type=\"number\"\n                  placeholder={1}\n                  name=\"width\"\n                  value={this.state.width}\n                  onChange={this.handleInput}\n                  min={1}\n                />\n              </Col>\n            </FormGroup>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default SizeComponent;\n","import React, { Component } from \"react\";\nimport { Table, Row, Col } from \"reactstrap\";\n\nclass MatrixComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      width: this.props.width || 1,\n      height: this.props.height || 1,\n      values: this.props.values || [],\n      saddle: { x: -1, y: -1 },\n      readonly: this.props.readonly,\n    };\n    if (!this.props.values) {\n      for (let i = 0; i < this.state.height; i++) {\n        this.state.values.push([]);\n        for (let j = 0; j < this.state.width; j++) {\n          this.state.values[i].push(0);\n        }\n      }\n    }\n    this.handleInput = this.handleInput.bind(this);\n  }\n\n  handleResize({ width, height }) {\n    if (this.state.width === width && this.state.height === height) return;\n    let oldValues = this.state.values;\n    let newValues = [];\n    for (let i = 0; i < height; i++) {\n      newValues.push([]);\n      for (let j = 0; j < width; j++) {\n        if (oldValues[i]) {\n          newValues[i].push(oldValues[i][j] || 0);\n        } else {\n          newValues[i].push(0);\n        }\n      }\n    }\n    this.setState({ width, height, values: newValues });\n    this.props.handleMatrixChange(newValues);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    this.handleResize(this.props);\n  }\n\n  componentDidMount() {\n    if (!this.props.readonly) {\n      this.props.handleMatrixChange(this.state.values);\n    }\n  }\n\n  handleInput = (x, y) => {\n    return ({ target }) => {\n      const { value } = target;\n\n      let oldValues = this.state.values;\n      let newValues = [];\n      for (let i = 0; i < this.state.height; i++) {\n        newValues.push([]);\n        for (let j = 0; j < this.state.width; j++) {\n          if (oldValues[i]) {\n            newValues[i].push(oldValues[i][j] || 0);\n          } else {\n            newValues[i].push(0);\n          }\n        }\n      }\n      newValues[x][y] = Number(value);\n      this.props.handleMatrixChange(newValues);\n      this.setState({ ...this.state, values: newValues });\n    };\n  };\n\n  renderTable() {\n    const calcBg = (i, j) => {\n      if (!this.props.saddle) return \"\";\n      if (i === this.props.saddle.y && j === this.props.saddle.x) {\n        return \"highlight\";\n      } else if (i === this.props.saddle.y || j === this.props.saddle.x) {\n        return \"semi-highlight\";\n      } else {\n        return \"\";\n      }\n    };\n    let columns = [];\n    columns.push(\n      <tr key=\"0c\">\n        <th></th>\n        {this.state.values[0]\n          .slice(0, this.state.values[0].length - 2)\n          .map((v, i) => (\n            <th className=\"bg-light\" key={`-${i}`}>\n              X<sub>{i + 1}</sub>\n            </th>\n          ))}\n      </tr>\n    );\n\n    let maxs = [];\n    for (let i = 0; i < this.state.height; i++) {\n      let rows = [];\n      if (i === this.state.height - 1) {\n        rows.push(<th key={i}>F</th>);\n      } else {\n        rows.push(<th key={i}></th>);\n      }\n      let min = this.state.values[i][0];\n      for (let j = 0; j < this.state.width - 2; j++) {\n        const val = this.props.readonly\n          ? this.props.values[i][j]\n          : this.state.values[i][j];\n        min = Math.min(min, val);\n        if (!maxs[j] || maxs[j] < val) {\n          maxs[j] = val;\n        }\n        rows.push(\n          <td key={`${i}-${j}`} className={calcBg(i, j)}>\n            <input\n              type=\"number\"\n              value={val || \"\"}\n              placeholder=\"0\"\n              className={`table-input`}\n              onChange={this.handleInput(i, j)}\n              key={`${i}-${j}`}\n              readOnly={this.props.readonly}\n            />\n          </td>\n        );\n      }\n      if (i < this.state.height - 1) {\n        rows.push(\n          <td key={`${i}-${this.state.width - 2}`}>\n            <select\n              className=\"form-control d-inline\"\n              onChange={this.handleInput(i, this.state.width - 2)}\n              value={this.state.values[i][this.state.width - 2]}\n            >\n              <option value=\"0\">≤</option>\n              <option value=\"1\">=</option>\n            </select>\n          </td>\n        );\n        rows.push(\n          <td key={`${i}-${this.state.width - 1}`}>\n            <input\n              type=\"number\"\n              value={this.state.values[i][this.state.width - 1] || \"\"}\n              placeholder=\"0\"\n              className={`table-input`}\n              key={`${i}-${this.state.width - 1}`}\n              onChange={this.handleInput(i, this.state.width - 1)}\n            />\n          </td>\n        );\n      }\n      columns.push(<tr key={i}>{rows}</tr>);\n    }\n\n    return columns;\n  }\n\n  render() {\n    return (\n      <>\n        <Row>\n          <Col xs={12} md=\"auto\">\n            <Table bordered className=\"text-center\" responsive>\n              <tbody>{this.renderTable()}</tbody>\n            </Table>\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nexport default MatrixComponent;\n","import * as linear from \"linear-solve\";\nimport { transpose, intersect } from \"mathjs\";\nimport \"node-fetch\";\n\nexport const findSaddle = (matrix) => {\n  const height = matrix.length || 0;\n  const width = matrix ? matrix[0].length : 0;\n\n  let mins = [];\n  for (let i = 0; i < height; i++) {\n    mins[i] = Math.min(...matrix[i]);\n  }\n\n  let maxs = [];\n  for (let j = 0; j < width; j++) {\n    maxs[j] = matrix[0][j];\n    for (let i = 1; i < height; i++) {\n      if (matrix[i][j] > maxs[j]) {\n        maxs[j] = matrix[i][j];\n      }\n    }\n  }\n\n  for (let i = 0; i < maxs.length; i++) {\n    for (let j = 0; j < mins.length; j++) {\n      if (mins[j] === maxs[i]) {\n        return {\n          x: i,\n          y: j,\n          price: matrix[j][i],\n        };\n      }\n    }\n  }\n\n  return false;\n};\n\nexport const lienarSolve = (matrix) => {\n  const height = matrix.length || 0;\n  const width = matrix ? matrix[0].length : 0;\n  if (height !== width)\n    return {\n      a: [],\n      b: [],\n      s: false,\n    };\n\n  const a = [];\n  for (let i = 0; i < height; i++) {\n    a.push([]);\n    for (let j = 0; j < width; j++) {\n      a[i].push(matrix[i][j]);\n    }\n    a[i].push(-1);\n  }\n  a.push([...matrix.map(() => 1), 0]);\n\n  const b = [...matrix.map(() => 0), 1];\n  try {\n    const s = linear.solve(a, b);\n    return {\n      a,\n      b,\n      s,\n    };\n  } catch (e) {\n    return {\n      a,\n      b,\n      s: false,\n    };\n  }\n};\n\nconst EPSILON = 0.000001;\n\nclass Line {\n  constructor(a, b, x2, y2) {\n    if (arguments.length == 2) {\n      this.a = a;\n      this.b = b;\n      this.x1 = 0;\n      this.y1 = b;\n      this.x2 = 1;\n      this.y2 = a + b;\n    } else {\n      this.x1 = a;\n      this.y1 = b;\n      this.x2 = x2;\n      this.y2 = y2;\n    }\n  }\n}\n\nclass Point {\n  constructor([x, y], line1, line2) {\n    this.x = x;\n    this.y = y;\n    this.line1 = line1;\n    this.line2 = line2;\n  }\n}\n\nfunction isBellow(line, point) {\n  return line.b + line.a * point.x + EPSILON >= point.y;\n}\n\nfunction isAbove(line, point) {\n  return line.b + line.a * point.x - EPSILON <= point.y;\n}\n\nexport const solveGraph = (matrix) => {\n  if (!matrix || !matrix[0] || !(matrix.length === 2 || matrix[0].length === 2))\n    return false;\n  let result = {\n    matrix: [],\n    bolds: [],\n    superbolds: [],\n    point: null,\n  };\n  const mode = matrix.length === 2 ? \"h\" : \"v\";\n  let lines;\n  let f, sf;\n  if (mode === \"h\") {\n    result.matrix = transpose(matrix);\n    lines = matrix[0].map((v, i) => new Line(matrix[1][i] - v, v));\n    f = isBellow;\n    sf = (p1, p2) => p2.y - p1.y;\n  } else {\n    result.matrix = matrix;\n    lines = matrix.map((l) => new Line(l[1] - l[0], l[0]));\n    f = isAbove;\n    sf = (p1, p2) => p1.y - p2.y;\n  }\n  let points = [];\n  const allLines = [\n    ...lines,\n    new Line(0, Number.MIN_SAFE_INTEGER, 0, Number.MAX_SAFE_INTEGER),\n    new Line(1, Number.MIN_SAFE_INTEGER, 1, Number.MAX_SAFE_INTEGER),\n  ];\n  for (let i = 0; i < allLines.length; i++) {\n    const l1 = allLines[i];\n    for (let j = i + 1; j < allLines.length; j++) {\n      const l2 = allLines[j];\n      const int = intersect(\n        [l1.x1, l1.y1],\n        [l1.x2, l1.y2],\n        [l2.x1, l2.y1],\n        [l2.x2, l2.y2]\n      );\n      if (!int) continue;\n      const point = new Point(int, l1, l2);\n      if (\n        point &&\n        !~points.findIndex((p) => p.x === point.x && p.y === point.y)\n      ) {\n        points.push(point);\n      }\n    }\n  }\n  points = points\n    .filter((p) => p.x >= 0 && p.x <= 1 && lines.every((l) => f(l, p)))\n    .sort((p1, p2) => p1.x - p2.x);\n  for (let i = 0; i < points.length - 1; i++) {\n    result.bolds.push(\n      new Line(points[i].x, points[i].y, points[i + 1].x, points[i + 1].y)\n    );\n  }\n  const hpoint = points\n    .filter(\n      (p) =>\n        p.line1.y1 !== Number.MIN_SAFE_INTEGER &&\n        p.line2.y1 !== Number.MIN_SAFE_INTEGER\n    )\n    .sort(sf)[0];\n\n  if (hpoint) {\n    result.point = hpoint;\n    result.superbolds.push(hpoint.line1, hpoint.line2);\n  }\n\n  return result;\n};\n\nexport const solveSimplex = async (matrix) => {\n  try {\n    var myMatrix = matrix.map(function (arr) {\n      return [\n        arr.slice(0, arr.length - 2),\n        arr[arr.length - 2] ? \"=\" : \"<=\",\n        arr[arr.length - 1],\n      ];\n    });\n    for (let i = 0; i < myMatrix.length; i++) {\n      myMatrix[i][myMatrix[i].length - 2] = myMatrix[i][myMatrix[i].length - 2]\n        ? \"<=\"\n        : \"=\";\n    }\n    const res = await fetch(\n      \"https://blooming-shelf-93833.herokuapp.com/simplexmethod/\",\n      {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify([\n          ...myMatrix\n            .slice(myMatrix.length - 1)[0]\n            .slice(0, myMatrix.slice(myMatrix.length - 1)[0].length - 2),\n          myMatrix.slice(0, myMatrix.length - 1),\n        ]),\n      }\n    );\n    const resJson = await res.json();\n    console.log(resJson);\n    return resJson;\n  } catch (e) {\n    return null;\n  }\n};\n","import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"reactstrap\";\nimport SizeComponent from \"./SizeComponent\";\nimport MatrixComponent from \"./MatrixComponent\";\nimport SadleComponent from \"./SadleComponent\";\nimport LinearComponent from \"./LinearComponent\";\nimport GraphComponent from \"./GraphComponent\";\nimport { solveSimplex } from \"../helpers/math\";\n\nclass MainComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      width: 2,\n      height: 2,\n      matrix: [\n        [2, 1, 0, 4],\n        [-1, 1, 0, 0],\n        [4, 1, 0, 0],\n      ],\n      graphSol: false,\n    };\n\n    this.handleSizeChange = this.handleSizeChange.bind(this);\n    this.handleMatrixChange = this.handleMatrixChange.bind(this);\n  }\n\n  handleSizeChange({ width, height }) {\n    this.setState({ width: Math.max(1, width), height: Math.max(1, height) });\n  }\n\n  handleMatrixChange(values) {\n    solveSimplex(values).then((res) => {\n      this.setState({\n        matrix: values,\n        solution: res,\n      });\n    });\n  }\n\n  renderSolution() {\n    if (!this.state.matrix) return;\n    if (this.state.solution) {\n      let resStr = \"F(\";\n      for (const x of this.state.solution.point) {\n        resStr += x + \", \";\n      }\n      resStr = resStr.substr(0, resStr.length - 2);\n      resStr += \") = \" + this.state.solution.decision;\n      return <p>{resStr}</p>;\n    } else {\n      return <h1 className=\"text-warning\">Не удаётся найти решение</h1>;\n    }\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Row>\n          <Col xs={{ offset: 1, size: \"10\" }} className=\"mt-2\">\n            <SizeComponent handleSizeChange={this.handleSizeChange} />\n            <MatrixComponent\n              width={this.state.width + 2}\n              height={this.state.height + 1}\n              values={this.state.matrix}\n              handleMatrixChange={this.handleMatrixChange}\n            />\n            {this.renderSolution()}\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default MainComponent;\n","import React from 'react';\nimport './App.css';\nimport MainComponent from \"./Components/MainComponent\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <MainComponent/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}